# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#
#    Copyright 2016 The OpenThread Authors. All Rights Reserved.
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#

VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@OPENTHREAD_EXAMPLES_EFR32_FALSE@am__append_1 = \
@OPENTHREAD_EXAMPLES_EFR32_FALSE@    repo/library/ecp.c                          \
@OPENTHREAD_EXAMPLES_EFR32_FALSE@    $(NULL)

subdir = third_party/mbedtls
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/ax_check_compiler.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_coverage.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_coverage_reporting.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_debug.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_docs.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_optimization.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_tests.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_filtered_canonical.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_werror.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/libtool.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/ltoptions.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/ltsugar.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/ltversion.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(SHELL) \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/include/openthread-config-generic.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)"
LIBRARIES = $(lib_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_@AM_V@)
am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libmbedcrypto_a_AR = $(AR) $(ARFLAGS)
libmbedcrypto_a_LIBADD =
am__libmbedcrypto_a_SOURCES_DIST = repo/library/aes.c \
	repo/library/asn1parse.c repo/library/asn1write.c \
	repo/library/base64.c repo/library/bignum.c repo/library/ccm.c \
	repo/library/cipher.c repo/library/cipher_wrap.c \
	repo/library/cmac.c repo/library/ctr_drbg.c \
	repo/library/debug.c repo/library/ecdh.c repo/library/ecdsa.c \
	repo/library/ecjpake.c repo/library/ecp_curves.c \
	repo/library/entropy.c repo/library/entropy_poll.c \
	repo/library/md.c repo/library/md_wrap.c \
	repo/library/memory_buffer_alloc.c repo/library/oid.c \
	repo/library/pem.c repo/library/pk.c repo/library/pk_wrap.c \
	repo/library/pkparse.c repo/library/platform.c \
	repo/library/platform_util.c repo/library/sha256.c \
	repo/library/ssl_cookie.c repo/library/ssl_ciphersuites.c \
	repo/library/ssl_cli.c repo/library/ssl_srv.c \
	repo/library/ssl_ticket.c repo/library/ssl_tls.c \
	repo/library/x509.c repo/library/x509_crt.c repo/library/ecp.c
am__dirstamp = $(am__leading_dot)dirstamp
@OPENTHREAD_EXAMPLES_EFR32_FALSE@am__objects_1 = repo/library/libmbedcrypto_a-ecp.$(OBJEXT)
am_libmbedcrypto_a_OBJECTS =  \
	repo/library/libmbedcrypto_a-aes.$(OBJEXT) \
	repo/library/libmbedcrypto_a-asn1parse.$(OBJEXT) \
	repo/library/libmbedcrypto_a-asn1write.$(OBJEXT) \
	repo/library/libmbedcrypto_a-base64.$(OBJEXT) \
	repo/library/libmbedcrypto_a-bignum.$(OBJEXT) \
	repo/library/libmbedcrypto_a-ccm.$(OBJEXT) \
	repo/library/libmbedcrypto_a-cipher.$(OBJEXT) \
	repo/library/libmbedcrypto_a-cipher_wrap.$(OBJEXT) \
	repo/library/libmbedcrypto_a-cmac.$(OBJEXT) \
	repo/library/libmbedcrypto_a-ctr_drbg.$(OBJEXT) \
	repo/library/libmbedcrypto_a-debug.$(OBJEXT) \
	repo/library/libmbedcrypto_a-ecdh.$(OBJEXT) \
	repo/library/libmbedcrypto_a-ecdsa.$(OBJEXT) \
	repo/library/libmbedcrypto_a-ecjpake.$(OBJEXT) \
	repo/library/libmbedcrypto_a-ecp_curves.$(OBJEXT) \
	repo/library/libmbedcrypto_a-entropy.$(OBJEXT) \
	repo/library/libmbedcrypto_a-entropy_poll.$(OBJEXT) \
	repo/library/libmbedcrypto_a-md.$(OBJEXT) \
	repo/library/libmbedcrypto_a-md_wrap.$(OBJEXT) \
	repo/library/libmbedcrypto_a-memory_buffer_alloc.$(OBJEXT) \
	repo/library/libmbedcrypto_a-oid.$(OBJEXT) \
	repo/library/libmbedcrypto_a-pem.$(OBJEXT) \
	repo/library/libmbedcrypto_a-pk.$(OBJEXT) \
	repo/library/libmbedcrypto_a-pk_wrap.$(OBJEXT) \
	repo/library/libmbedcrypto_a-pkparse.$(OBJEXT) \
	repo/library/libmbedcrypto_a-platform.$(OBJEXT) \
	repo/library/libmbedcrypto_a-platform_util.$(OBJEXT) \
	repo/library/libmbedcrypto_a-sha256.$(OBJEXT) \
	repo/library/libmbedcrypto_a-ssl_cookie.$(OBJEXT) \
	repo/library/libmbedcrypto_a-ssl_ciphersuites.$(OBJEXT) \
	repo/library/libmbedcrypto_a-ssl_cli.$(OBJEXT) \
	repo/library/libmbedcrypto_a-ssl_srv.$(OBJEXT) \
	repo/library/libmbedcrypto_a-ssl_ticket.$(OBJEXT) \
	repo/library/libmbedcrypto_a-ssl_tls.$(OBJEXT) \
	repo/library/libmbedcrypto_a-x509.$(OBJEXT) \
	repo/library/libmbedcrypto_a-x509_crt.$(OBJEXT) \
	$(am__objects_1)
libmbedcrypto_a_OBJECTS = $(am_libmbedcrypto_a_OBJECTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/include
depcomp = $(SHELL) \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libmbedcrypto_a_SOURCES)
DIST_SOURCES = $(am__libmbedcrypto_a_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/depcomp \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/mkinstalldirs
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCAS = @CCAS@
CCASDEPMODE = @CCASDEPMODE@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CMP = @CMP@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOT = @DOT@
DOXYGEN = @DOXYGEN@
DOXYGEN_USE_DOT = @DOXYGEN_USE_DOT@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GENHTML = @GENHTML@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LCOV = @LCOV@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBOPENTHREAD_VERSION_AGE = @LIBOPENTHREAD_VERSION_AGE@
LIBOPENTHREAD_VERSION_CURRENT = @LIBOPENTHREAD_VERSION_CURRENT@
LIBOPENTHREAD_VERSION_INFO = @LIBOPENTHREAD_VERSION_INFO@
LIBOPENTHREAD_VERSION_REVISION = @LIBOPENTHREAD_VERSION_REVISION@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJCOPY = @OBJCOPY@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENTHREAD_CUSTOM_LINKER_FILE = @OPENTHREAD_CUSTOM_LINKER_FILE@
OPENTHREAD_ENABLE_APPLICATION_COAP = @OPENTHREAD_ENABLE_APPLICATION_COAP@
OPENTHREAD_ENABLE_APPLICATION_COAP_SECURE = @OPENTHREAD_ENABLE_APPLICATION_COAP_SECURE@
OPENTHREAD_ENABLE_BORDER_AGENT = @OPENTHREAD_ENABLE_BORDER_AGENT@
OPENTHREAD_ENABLE_BORDER_ROUTER = @OPENTHREAD_ENABLE_BORDER_ROUTER@
OPENTHREAD_ENABLE_CERT_LOG = @OPENTHREAD_ENABLE_CERT_LOG@
OPENTHREAD_ENABLE_CHANNEL_MANAGER = @OPENTHREAD_ENABLE_CHANNEL_MANAGER@
OPENTHREAD_ENABLE_CHANNEL_MONITOR = @OPENTHREAD_ENABLE_CHANNEL_MONITOR@
OPENTHREAD_ENABLE_CHILD_SUPERVISION = @OPENTHREAD_ENABLE_CHILD_SUPERVISION@
OPENTHREAD_ENABLE_CLI = @OPENTHREAD_ENABLE_CLI@
OPENTHREAD_ENABLE_COMMISSIONER = @OPENTHREAD_ENABLE_COMMISSIONER@
OPENTHREAD_ENABLE_DHCP6_CLIENT = @OPENTHREAD_ENABLE_DHCP6_CLIENT@
OPENTHREAD_ENABLE_DHCP6_SERVER = @OPENTHREAD_ENABLE_DHCP6_SERVER@
OPENTHREAD_ENABLE_DIAG = @OPENTHREAD_ENABLE_DIAG@
OPENTHREAD_ENABLE_DNS_CLIENT = @OPENTHREAD_ENABLE_DNS_CLIENT@
OPENTHREAD_ENABLE_DTLS = @OPENTHREAD_ENABLE_DTLS@
OPENTHREAD_ENABLE_ECDSA = @OPENTHREAD_ENABLE_ECDSA@
OPENTHREAD_ENABLE_EXAMPLES = @OPENTHREAD_ENABLE_EXAMPLES@
OPENTHREAD_ENABLE_EXECUTABLE = @OPENTHREAD_ENABLE_EXECUTABLE@
OPENTHREAD_ENABLE_FTD = @OPENTHREAD_ENABLE_FTD@
OPENTHREAD_ENABLE_JAM_DETECTION = @OPENTHREAD_ENABLE_JAM_DETECTION@
OPENTHREAD_ENABLE_JOINER = @OPENTHREAD_ENABLE_JOINER@
OPENTHREAD_ENABLE_LEGACY = @OPENTHREAD_ENABLE_LEGACY@
OPENTHREAD_ENABLE_MAC_FILTER = @OPENTHREAD_ENABLE_MAC_FILTER@
OPENTHREAD_ENABLE_MTD = @OPENTHREAD_ENABLE_MTD@
OPENTHREAD_ENABLE_MTD_NETWORK_DIAGNOSTIC = @OPENTHREAD_ENABLE_MTD_NETWORK_DIAGNOSTIC@
OPENTHREAD_ENABLE_MULTIPLE_INSTANCES = @OPENTHREAD_ENABLE_MULTIPLE_INSTANCES@
OPENTHREAD_ENABLE_NCP = @OPENTHREAD_ENABLE_NCP@
OPENTHREAD_ENABLE_NCP_SPI = @OPENTHREAD_ENABLE_NCP_SPI@
OPENTHREAD_ENABLE_NCP_UART = @OPENTHREAD_ENABLE_NCP_UART@
OPENTHREAD_ENABLE_PLATFORM_NETIF = @OPENTHREAD_ENABLE_PLATFORM_NETIF@
OPENTHREAD_ENABLE_PLATFORM_UDP = @OPENTHREAD_ENABLE_PLATFORM_UDP@
OPENTHREAD_ENABLE_POSIX_APP_DAEMON = @OPENTHREAD_ENABLE_POSIX_APP_DAEMON@
OPENTHREAD_ENABLE_RADIO_ONLY = @OPENTHREAD_ENABLE_RADIO_ONLY@
OPENTHREAD_ENABLE_RAW_LINK_API = @OPENTHREAD_ENABLE_RAW_LINK_API@
OPENTHREAD_ENABLE_SERVICE = @OPENTHREAD_ENABLE_SERVICE@
OPENTHREAD_ENABLE_SNTP_CLIENT = @OPENTHREAD_ENABLE_SNTP_CLIENT@
OPENTHREAD_ENABLE_UDP_FORWARD = @OPENTHREAD_ENABLE_UDP_FORWARD@
OPENTHREAD_EXAMPLES_CC1352 = @OPENTHREAD_EXAMPLES_CC1352@
OPENTHREAD_EXAMPLES_CC2538 = @OPENTHREAD_EXAMPLES_CC2538@
OPENTHREAD_EXAMPLES_CC2650 = @OPENTHREAD_EXAMPLES_CC2650@
OPENTHREAD_EXAMPLES_CC2652 = @OPENTHREAD_EXAMPLES_CC2652@
OPENTHREAD_EXAMPLES_DA15000 = @OPENTHREAD_EXAMPLES_DA15000@
OPENTHREAD_EXAMPLES_EFR32 = @OPENTHREAD_EXAMPLES_EFR32@
OPENTHREAD_EXAMPLES_EMSK = @OPENTHREAD_EXAMPLES_EMSK@
OPENTHREAD_EXAMPLES_GP712 = @OPENTHREAD_EXAMPLES_GP712@
OPENTHREAD_EXAMPLES_KW41Z = @OPENTHREAD_EXAMPLES_KW41Z@
OPENTHREAD_EXAMPLES_NRF52811 = @OPENTHREAD_EXAMPLES_NRF52811@
OPENTHREAD_EXAMPLES_NRF52840 = @OPENTHREAD_EXAMPLES_NRF52840@
OPENTHREAD_EXAMPLES_POSIX = @OPENTHREAD_EXAMPLES_POSIX@
OPENTHREAD_EXAMPLES_QPG6095 = @OPENTHREAD_EXAMPLES_QPG6095@
OPENTHREAD_EXAMPLES_SAMR21 = @OPENTHREAD_EXAMPLES_SAMR21@
OPENTHREAD_NCP_SPINEL_ENCRYPTER_LIBS = @OPENTHREAD_NCP_SPINEL_ENCRYPTER_LIBS@
OPENTHREAD_NCP_VENDOR_HOOK_SOURCE = @OPENTHREAD_NCP_VENDOR_HOOK_SOURCE@
OPENTHREAD_PLATFORM_POSIX_APP = @OPENTHREAD_PLATFORM_POSIX_APP@
OPENTHREAD_TARGET_DARWIN = @OPENTHREAD_TARGET_DARWIN@
OPENTHREAD_TARGET_DEFINES = @OPENTHREAD_TARGET_DEFINES@
OPENTHREAD_TARGET_LINUX = @OPENTHREAD_TARGET_LINUX@
OPENTHREAD_VENDOR_EXTENSION_SOURCE = @OPENTHREAD_VENDOR_EXTENSION_SOURCE@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PRETTY = @PRETTY@
PRETTY_ARGS = @PRETTY_ARGS@
PRETTY_CHECK = @PRETTY_CHECK@
PRETTY_CHECK_ARGS = @PRETTY_CHECK_ARGS@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_nlbuild_autotools_dir = @abs_top_nlbuild_autotools_dir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
nlbuild_autotools_stem = @nlbuild_autotools_stem@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
EXTRA_DIST = \
    mbedtls-config.h                            \
    repo/include                                \
    $(NULL)

lib_LIBRARIES = libmbedcrypto.a
MBEDTLS_SRCDIR = $(top_srcdir)/third_party/mbedtls/repo
libmbedcrypto_a_CPPFLAGS = \
    -I$(top_srcdir)/include                     \
    -I$(top_srcdir)/src/core                    \
    -I$(MBEDTLS_SRCDIR)/include                 \
    $(MBEDTLS_CPPFLAGS)                         \
    $(NULL)

libmbedcrypto_a_SOURCES = repo/library/aes.c repo/library/asn1parse.c \
	repo/library/asn1write.c repo/library/base64.c \
	repo/library/bignum.c repo/library/ccm.c repo/library/cipher.c \
	repo/library/cipher_wrap.c repo/library/cmac.c \
	repo/library/ctr_drbg.c repo/library/debug.c \
	repo/library/ecdh.c repo/library/ecdsa.c \
	repo/library/ecjpake.c repo/library/ecp_curves.c \
	repo/library/entropy.c repo/library/entropy_poll.c \
	repo/library/md.c repo/library/md_wrap.c \
	repo/library/memory_buffer_alloc.c repo/library/oid.c \
	repo/library/pem.c repo/library/pk.c repo/library/pk_wrap.c \
	repo/library/pkparse.c repo/library/platform.c \
	repo/library/platform_util.c repo/library/sha256.c \
	repo/library/ssl_cookie.c repo/library/ssl_ciphersuites.c \
	repo/library/ssl_cli.c repo/library/ssl_srv.c \
	repo/library/ssl_ticket.c repo/library/ssl_tls.c \
	repo/library/x509.c repo/library/x509_crt.c $(NULL) \
	$(am__append_1)
@OPENTHREAD_BUILD_COVERAGE_TRUE@Dash = -
@OPENTHREAD_BUILD_COVERAGE_TRUE@CLEANFILES = $(shell find $(top_builddir)/third_party/mbedtls $(Dash)name "*.gcda" $(Dash)o $(Dash)name "*.gcno")
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign third_party/mbedtls/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign third_party/mbedtls/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libdir)'; $(am__uninstall_files_from_dir)

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
repo/library/$(am__dirstamp):
	@$(MKDIR_P) repo/library
	@: > repo/library/$(am__dirstamp)
repo/library/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) repo/library/$(DEPDIR)
	@: > repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-aes.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-asn1parse.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-asn1write.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-base64.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-bignum.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-ccm.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-cipher.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-cipher_wrap.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-cmac.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-ctr_drbg.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-debug.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-ecdh.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-ecdsa.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-ecjpake.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-ecp_curves.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-entropy.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-entropy_poll.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-md.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-md_wrap.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-memory_buffer_alloc.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-oid.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-pem.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-pk.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-pk_wrap.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-pkparse.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-platform.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-platform_util.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-sha256.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-ssl_cookie.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-ssl_ciphersuites.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-ssl_cli.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-ssl_srv.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-ssl_ticket.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-ssl_tls.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-x509.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-x509_crt.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-ecp.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)

libmbedcrypto.a: $(libmbedcrypto_a_OBJECTS) $(libmbedcrypto_a_DEPENDENCIES) $(EXTRA_libmbedcrypto_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libmbedcrypto.a
	$(AM_V_AR)$(libmbedcrypto_a_AR) libmbedcrypto.a $(libmbedcrypto_a_OBJECTS) $(libmbedcrypto_a_LIBADD)
	$(AM_V_at)$(RANLIB) libmbedcrypto.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f repo/library/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-aes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-asn1parse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-asn1write.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-base64.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-bignum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-ccm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-cipher.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-cipher_wrap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-cmac.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-ctr_drbg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-debug.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-ecdh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-ecdsa.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-ecjpake.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-ecp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-ecp_curves.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-entropy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-entropy_poll.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-md.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-md_wrap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-memory_buffer_alloc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-oid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-pem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-pk.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-pk_wrap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-pkparse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-platform.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-platform_util.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-sha256.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ciphersuites.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cli.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cookie.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_srv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ticket.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_tls.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-x509.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-x509_crt.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

repo/library/libmbedcrypto_a-aes.o: repo/library/aes.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-aes.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-aes.Tpo -c -o repo/library/libmbedcrypto_a-aes.o `test -f 'repo/library/aes.c' || echo '$(srcdir)/'`repo/library/aes.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-aes.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-aes.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/aes.c' object='repo/library/libmbedcrypto_a-aes.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-aes.o `test -f 'repo/library/aes.c' || echo '$(srcdir)/'`repo/library/aes.c

repo/library/libmbedcrypto_a-aes.obj: repo/library/aes.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-aes.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-aes.Tpo -c -o repo/library/libmbedcrypto_a-aes.obj `if test -f 'repo/library/aes.c'; then $(CYGPATH_W) 'repo/library/aes.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/aes.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-aes.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-aes.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/aes.c' object='repo/library/libmbedcrypto_a-aes.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-aes.obj `if test -f 'repo/library/aes.c'; then $(CYGPATH_W) 'repo/library/aes.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/aes.c'; fi`

repo/library/libmbedcrypto_a-asn1parse.o: repo/library/asn1parse.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-asn1parse.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-asn1parse.Tpo -c -o repo/library/libmbedcrypto_a-asn1parse.o `test -f 'repo/library/asn1parse.c' || echo '$(srcdir)/'`repo/library/asn1parse.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-asn1parse.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-asn1parse.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/asn1parse.c' object='repo/library/libmbedcrypto_a-asn1parse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-asn1parse.o `test -f 'repo/library/asn1parse.c' || echo '$(srcdir)/'`repo/library/asn1parse.c

repo/library/libmbedcrypto_a-asn1parse.obj: repo/library/asn1parse.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-asn1parse.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-asn1parse.Tpo -c -o repo/library/libmbedcrypto_a-asn1parse.obj `if test -f 'repo/library/asn1parse.c'; then $(CYGPATH_W) 'repo/library/asn1parse.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/asn1parse.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-asn1parse.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-asn1parse.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/asn1parse.c' object='repo/library/libmbedcrypto_a-asn1parse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-asn1parse.obj `if test -f 'repo/library/asn1parse.c'; then $(CYGPATH_W) 'repo/library/asn1parse.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/asn1parse.c'; fi`

repo/library/libmbedcrypto_a-asn1write.o: repo/library/asn1write.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-asn1write.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-asn1write.Tpo -c -o repo/library/libmbedcrypto_a-asn1write.o `test -f 'repo/library/asn1write.c' || echo '$(srcdir)/'`repo/library/asn1write.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-asn1write.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-asn1write.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/asn1write.c' object='repo/library/libmbedcrypto_a-asn1write.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-asn1write.o `test -f 'repo/library/asn1write.c' || echo '$(srcdir)/'`repo/library/asn1write.c

repo/library/libmbedcrypto_a-asn1write.obj: repo/library/asn1write.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-asn1write.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-asn1write.Tpo -c -o repo/library/libmbedcrypto_a-asn1write.obj `if test -f 'repo/library/asn1write.c'; then $(CYGPATH_W) 'repo/library/asn1write.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/asn1write.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-asn1write.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-asn1write.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/asn1write.c' object='repo/library/libmbedcrypto_a-asn1write.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-asn1write.obj `if test -f 'repo/library/asn1write.c'; then $(CYGPATH_W) 'repo/library/asn1write.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/asn1write.c'; fi`

repo/library/libmbedcrypto_a-base64.o: repo/library/base64.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-base64.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-base64.Tpo -c -o repo/library/libmbedcrypto_a-base64.o `test -f 'repo/library/base64.c' || echo '$(srcdir)/'`repo/library/base64.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-base64.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-base64.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/base64.c' object='repo/library/libmbedcrypto_a-base64.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-base64.o `test -f 'repo/library/base64.c' || echo '$(srcdir)/'`repo/library/base64.c

repo/library/libmbedcrypto_a-base64.obj: repo/library/base64.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-base64.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-base64.Tpo -c -o repo/library/libmbedcrypto_a-base64.obj `if test -f 'repo/library/base64.c'; then $(CYGPATH_W) 'repo/library/base64.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/base64.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-base64.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-base64.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/base64.c' object='repo/library/libmbedcrypto_a-base64.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-base64.obj `if test -f 'repo/library/base64.c'; then $(CYGPATH_W) 'repo/library/base64.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/base64.c'; fi`

repo/library/libmbedcrypto_a-bignum.o: repo/library/bignum.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-bignum.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-bignum.Tpo -c -o repo/library/libmbedcrypto_a-bignum.o `test -f 'repo/library/bignum.c' || echo '$(srcdir)/'`repo/library/bignum.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-bignum.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-bignum.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/bignum.c' object='repo/library/libmbedcrypto_a-bignum.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-bignum.o `test -f 'repo/library/bignum.c' || echo '$(srcdir)/'`repo/library/bignum.c

repo/library/libmbedcrypto_a-bignum.obj: repo/library/bignum.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-bignum.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-bignum.Tpo -c -o repo/library/libmbedcrypto_a-bignum.obj `if test -f 'repo/library/bignum.c'; then $(CYGPATH_W) 'repo/library/bignum.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/bignum.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-bignum.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-bignum.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/bignum.c' object='repo/library/libmbedcrypto_a-bignum.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-bignum.obj `if test -f 'repo/library/bignum.c'; then $(CYGPATH_W) 'repo/library/bignum.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/bignum.c'; fi`

repo/library/libmbedcrypto_a-ccm.o: repo/library/ccm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ccm.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ccm.Tpo -c -o repo/library/libmbedcrypto_a-ccm.o `test -f 'repo/library/ccm.c' || echo '$(srcdir)/'`repo/library/ccm.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ccm.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ccm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ccm.c' object='repo/library/libmbedcrypto_a-ccm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ccm.o `test -f 'repo/library/ccm.c' || echo '$(srcdir)/'`repo/library/ccm.c

repo/library/libmbedcrypto_a-ccm.obj: repo/library/ccm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ccm.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ccm.Tpo -c -o repo/library/libmbedcrypto_a-ccm.obj `if test -f 'repo/library/ccm.c'; then $(CYGPATH_W) 'repo/library/ccm.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ccm.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ccm.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ccm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ccm.c' object='repo/library/libmbedcrypto_a-ccm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ccm.obj `if test -f 'repo/library/ccm.c'; then $(CYGPATH_W) 'repo/library/ccm.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ccm.c'; fi`

repo/library/libmbedcrypto_a-cipher.o: repo/library/cipher.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-cipher.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-cipher.Tpo -c -o repo/library/libmbedcrypto_a-cipher.o `test -f 'repo/library/cipher.c' || echo '$(srcdir)/'`repo/library/cipher.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-cipher.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-cipher.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/cipher.c' object='repo/library/libmbedcrypto_a-cipher.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-cipher.o `test -f 'repo/library/cipher.c' || echo '$(srcdir)/'`repo/library/cipher.c

repo/library/libmbedcrypto_a-cipher.obj: repo/library/cipher.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-cipher.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-cipher.Tpo -c -o repo/library/libmbedcrypto_a-cipher.obj `if test -f 'repo/library/cipher.c'; then $(CYGPATH_W) 'repo/library/cipher.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/cipher.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-cipher.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-cipher.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/cipher.c' object='repo/library/libmbedcrypto_a-cipher.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-cipher.obj `if test -f 'repo/library/cipher.c'; then $(CYGPATH_W) 'repo/library/cipher.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/cipher.c'; fi`

repo/library/libmbedcrypto_a-cipher_wrap.o: repo/library/cipher_wrap.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-cipher_wrap.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-cipher_wrap.Tpo -c -o repo/library/libmbedcrypto_a-cipher_wrap.o `test -f 'repo/library/cipher_wrap.c' || echo '$(srcdir)/'`repo/library/cipher_wrap.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-cipher_wrap.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-cipher_wrap.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/cipher_wrap.c' object='repo/library/libmbedcrypto_a-cipher_wrap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-cipher_wrap.o `test -f 'repo/library/cipher_wrap.c' || echo '$(srcdir)/'`repo/library/cipher_wrap.c

repo/library/libmbedcrypto_a-cipher_wrap.obj: repo/library/cipher_wrap.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-cipher_wrap.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-cipher_wrap.Tpo -c -o repo/library/libmbedcrypto_a-cipher_wrap.obj `if test -f 'repo/library/cipher_wrap.c'; then $(CYGPATH_W) 'repo/library/cipher_wrap.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/cipher_wrap.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-cipher_wrap.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-cipher_wrap.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/cipher_wrap.c' object='repo/library/libmbedcrypto_a-cipher_wrap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-cipher_wrap.obj `if test -f 'repo/library/cipher_wrap.c'; then $(CYGPATH_W) 'repo/library/cipher_wrap.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/cipher_wrap.c'; fi`

repo/library/libmbedcrypto_a-cmac.o: repo/library/cmac.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-cmac.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-cmac.Tpo -c -o repo/library/libmbedcrypto_a-cmac.o `test -f 'repo/library/cmac.c' || echo '$(srcdir)/'`repo/library/cmac.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-cmac.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-cmac.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/cmac.c' object='repo/library/libmbedcrypto_a-cmac.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-cmac.o `test -f 'repo/library/cmac.c' || echo '$(srcdir)/'`repo/library/cmac.c

repo/library/libmbedcrypto_a-cmac.obj: repo/library/cmac.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-cmac.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-cmac.Tpo -c -o repo/library/libmbedcrypto_a-cmac.obj `if test -f 'repo/library/cmac.c'; then $(CYGPATH_W) 'repo/library/cmac.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/cmac.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-cmac.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-cmac.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/cmac.c' object='repo/library/libmbedcrypto_a-cmac.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-cmac.obj `if test -f 'repo/library/cmac.c'; then $(CYGPATH_W) 'repo/library/cmac.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/cmac.c'; fi`

repo/library/libmbedcrypto_a-ctr_drbg.o: repo/library/ctr_drbg.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ctr_drbg.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ctr_drbg.Tpo -c -o repo/library/libmbedcrypto_a-ctr_drbg.o `test -f 'repo/library/ctr_drbg.c' || echo '$(srcdir)/'`repo/library/ctr_drbg.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ctr_drbg.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ctr_drbg.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ctr_drbg.c' object='repo/library/libmbedcrypto_a-ctr_drbg.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ctr_drbg.o `test -f 'repo/library/ctr_drbg.c' || echo '$(srcdir)/'`repo/library/ctr_drbg.c

repo/library/libmbedcrypto_a-ctr_drbg.obj: repo/library/ctr_drbg.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ctr_drbg.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ctr_drbg.Tpo -c -o repo/library/libmbedcrypto_a-ctr_drbg.obj `if test -f 'repo/library/ctr_drbg.c'; then $(CYGPATH_W) 'repo/library/ctr_drbg.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ctr_drbg.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ctr_drbg.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ctr_drbg.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ctr_drbg.c' object='repo/library/libmbedcrypto_a-ctr_drbg.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ctr_drbg.obj `if test -f 'repo/library/ctr_drbg.c'; then $(CYGPATH_W) 'repo/library/ctr_drbg.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ctr_drbg.c'; fi`

repo/library/libmbedcrypto_a-debug.o: repo/library/debug.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-debug.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-debug.Tpo -c -o repo/library/libmbedcrypto_a-debug.o `test -f 'repo/library/debug.c' || echo '$(srcdir)/'`repo/library/debug.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-debug.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-debug.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/debug.c' object='repo/library/libmbedcrypto_a-debug.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-debug.o `test -f 'repo/library/debug.c' || echo '$(srcdir)/'`repo/library/debug.c

repo/library/libmbedcrypto_a-debug.obj: repo/library/debug.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-debug.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-debug.Tpo -c -o repo/library/libmbedcrypto_a-debug.obj `if test -f 'repo/library/debug.c'; then $(CYGPATH_W) 'repo/library/debug.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/debug.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-debug.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-debug.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/debug.c' object='repo/library/libmbedcrypto_a-debug.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-debug.obj `if test -f 'repo/library/debug.c'; then $(CYGPATH_W) 'repo/library/debug.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/debug.c'; fi`

repo/library/libmbedcrypto_a-ecdh.o: repo/library/ecdh.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ecdh.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ecdh.Tpo -c -o repo/library/libmbedcrypto_a-ecdh.o `test -f 'repo/library/ecdh.c' || echo '$(srcdir)/'`repo/library/ecdh.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ecdh.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ecdh.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ecdh.c' object='repo/library/libmbedcrypto_a-ecdh.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ecdh.o `test -f 'repo/library/ecdh.c' || echo '$(srcdir)/'`repo/library/ecdh.c

repo/library/libmbedcrypto_a-ecdh.obj: repo/library/ecdh.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ecdh.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ecdh.Tpo -c -o repo/library/libmbedcrypto_a-ecdh.obj `if test -f 'repo/library/ecdh.c'; then $(CYGPATH_W) 'repo/library/ecdh.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ecdh.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ecdh.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ecdh.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ecdh.c' object='repo/library/libmbedcrypto_a-ecdh.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ecdh.obj `if test -f 'repo/library/ecdh.c'; then $(CYGPATH_W) 'repo/library/ecdh.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ecdh.c'; fi`

repo/library/libmbedcrypto_a-ecdsa.o: repo/library/ecdsa.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ecdsa.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ecdsa.Tpo -c -o repo/library/libmbedcrypto_a-ecdsa.o `test -f 'repo/library/ecdsa.c' || echo '$(srcdir)/'`repo/library/ecdsa.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ecdsa.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ecdsa.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ecdsa.c' object='repo/library/libmbedcrypto_a-ecdsa.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ecdsa.o `test -f 'repo/library/ecdsa.c' || echo '$(srcdir)/'`repo/library/ecdsa.c

repo/library/libmbedcrypto_a-ecdsa.obj: repo/library/ecdsa.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ecdsa.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ecdsa.Tpo -c -o repo/library/libmbedcrypto_a-ecdsa.obj `if test -f 'repo/library/ecdsa.c'; then $(CYGPATH_W) 'repo/library/ecdsa.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ecdsa.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ecdsa.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ecdsa.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ecdsa.c' object='repo/library/libmbedcrypto_a-ecdsa.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ecdsa.obj `if test -f 'repo/library/ecdsa.c'; then $(CYGPATH_W) 'repo/library/ecdsa.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ecdsa.c'; fi`

repo/library/libmbedcrypto_a-ecjpake.o: repo/library/ecjpake.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ecjpake.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ecjpake.Tpo -c -o repo/library/libmbedcrypto_a-ecjpake.o `test -f 'repo/library/ecjpake.c' || echo '$(srcdir)/'`repo/library/ecjpake.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ecjpake.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ecjpake.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ecjpake.c' object='repo/library/libmbedcrypto_a-ecjpake.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ecjpake.o `test -f 'repo/library/ecjpake.c' || echo '$(srcdir)/'`repo/library/ecjpake.c

repo/library/libmbedcrypto_a-ecjpake.obj: repo/library/ecjpake.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ecjpake.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ecjpake.Tpo -c -o repo/library/libmbedcrypto_a-ecjpake.obj `if test -f 'repo/library/ecjpake.c'; then $(CYGPATH_W) 'repo/library/ecjpake.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ecjpake.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ecjpake.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ecjpake.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ecjpake.c' object='repo/library/libmbedcrypto_a-ecjpake.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ecjpake.obj `if test -f 'repo/library/ecjpake.c'; then $(CYGPATH_W) 'repo/library/ecjpake.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ecjpake.c'; fi`

repo/library/libmbedcrypto_a-ecp_curves.o: repo/library/ecp_curves.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ecp_curves.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ecp_curves.Tpo -c -o repo/library/libmbedcrypto_a-ecp_curves.o `test -f 'repo/library/ecp_curves.c' || echo '$(srcdir)/'`repo/library/ecp_curves.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ecp_curves.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ecp_curves.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ecp_curves.c' object='repo/library/libmbedcrypto_a-ecp_curves.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ecp_curves.o `test -f 'repo/library/ecp_curves.c' || echo '$(srcdir)/'`repo/library/ecp_curves.c

repo/library/libmbedcrypto_a-ecp_curves.obj: repo/library/ecp_curves.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ecp_curves.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ecp_curves.Tpo -c -o repo/library/libmbedcrypto_a-ecp_curves.obj `if test -f 'repo/library/ecp_curves.c'; then $(CYGPATH_W) 'repo/library/ecp_curves.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ecp_curves.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ecp_curves.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ecp_curves.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ecp_curves.c' object='repo/library/libmbedcrypto_a-ecp_curves.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ecp_curves.obj `if test -f 'repo/library/ecp_curves.c'; then $(CYGPATH_W) 'repo/library/ecp_curves.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ecp_curves.c'; fi`

repo/library/libmbedcrypto_a-entropy.o: repo/library/entropy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-entropy.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-entropy.Tpo -c -o repo/library/libmbedcrypto_a-entropy.o `test -f 'repo/library/entropy.c' || echo '$(srcdir)/'`repo/library/entropy.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-entropy.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-entropy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/entropy.c' object='repo/library/libmbedcrypto_a-entropy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-entropy.o `test -f 'repo/library/entropy.c' || echo '$(srcdir)/'`repo/library/entropy.c

repo/library/libmbedcrypto_a-entropy.obj: repo/library/entropy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-entropy.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-entropy.Tpo -c -o repo/library/libmbedcrypto_a-entropy.obj `if test -f 'repo/library/entropy.c'; then $(CYGPATH_W) 'repo/library/entropy.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/entropy.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-entropy.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-entropy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/entropy.c' object='repo/library/libmbedcrypto_a-entropy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-entropy.obj `if test -f 'repo/library/entropy.c'; then $(CYGPATH_W) 'repo/library/entropy.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/entropy.c'; fi`

repo/library/libmbedcrypto_a-entropy_poll.o: repo/library/entropy_poll.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-entropy_poll.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-entropy_poll.Tpo -c -o repo/library/libmbedcrypto_a-entropy_poll.o `test -f 'repo/library/entropy_poll.c' || echo '$(srcdir)/'`repo/library/entropy_poll.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-entropy_poll.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-entropy_poll.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/entropy_poll.c' object='repo/library/libmbedcrypto_a-entropy_poll.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-entropy_poll.o `test -f 'repo/library/entropy_poll.c' || echo '$(srcdir)/'`repo/library/entropy_poll.c

repo/library/libmbedcrypto_a-entropy_poll.obj: repo/library/entropy_poll.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-entropy_poll.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-entropy_poll.Tpo -c -o repo/library/libmbedcrypto_a-entropy_poll.obj `if test -f 'repo/library/entropy_poll.c'; then $(CYGPATH_W) 'repo/library/entropy_poll.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/entropy_poll.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-entropy_poll.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-entropy_poll.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/entropy_poll.c' object='repo/library/libmbedcrypto_a-entropy_poll.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-entropy_poll.obj `if test -f 'repo/library/entropy_poll.c'; then $(CYGPATH_W) 'repo/library/entropy_poll.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/entropy_poll.c'; fi`

repo/library/libmbedcrypto_a-md.o: repo/library/md.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-md.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-md.Tpo -c -o repo/library/libmbedcrypto_a-md.o `test -f 'repo/library/md.c' || echo '$(srcdir)/'`repo/library/md.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-md.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-md.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/md.c' object='repo/library/libmbedcrypto_a-md.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-md.o `test -f 'repo/library/md.c' || echo '$(srcdir)/'`repo/library/md.c

repo/library/libmbedcrypto_a-md.obj: repo/library/md.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-md.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-md.Tpo -c -o repo/library/libmbedcrypto_a-md.obj `if test -f 'repo/library/md.c'; then $(CYGPATH_W) 'repo/library/md.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/md.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-md.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-md.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/md.c' object='repo/library/libmbedcrypto_a-md.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-md.obj `if test -f 'repo/library/md.c'; then $(CYGPATH_W) 'repo/library/md.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/md.c'; fi`

repo/library/libmbedcrypto_a-md_wrap.o: repo/library/md_wrap.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-md_wrap.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-md_wrap.Tpo -c -o repo/library/libmbedcrypto_a-md_wrap.o `test -f 'repo/library/md_wrap.c' || echo '$(srcdir)/'`repo/library/md_wrap.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-md_wrap.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-md_wrap.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/md_wrap.c' object='repo/library/libmbedcrypto_a-md_wrap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-md_wrap.o `test -f 'repo/library/md_wrap.c' || echo '$(srcdir)/'`repo/library/md_wrap.c

repo/library/libmbedcrypto_a-md_wrap.obj: repo/library/md_wrap.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-md_wrap.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-md_wrap.Tpo -c -o repo/library/libmbedcrypto_a-md_wrap.obj `if test -f 'repo/library/md_wrap.c'; then $(CYGPATH_W) 'repo/library/md_wrap.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/md_wrap.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-md_wrap.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-md_wrap.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/md_wrap.c' object='repo/library/libmbedcrypto_a-md_wrap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-md_wrap.obj `if test -f 'repo/library/md_wrap.c'; then $(CYGPATH_W) 'repo/library/md_wrap.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/md_wrap.c'; fi`

repo/library/libmbedcrypto_a-memory_buffer_alloc.o: repo/library/memory_buffer_alloc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-memory_buffer_alloc.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-memory_buffer_alloc.Tpo -c -o repo/library/libmbedcrypto_a-memory_buffer_alloc.o `test -f 'repo/library/memory_buffer_alloc.c' || echo '$(srcdir)/'`repo/library/memory_buffer_alloc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-memory_buffer_alloc.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-memory_buffer_alloc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/memory_buffer_alloc.c' object='repo/library/libmbedcrypto_a-memory_buffer_alloc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-memory_buffer_alloc.o `test -f 'repo/library/memory_buffer_alloc.c' || echo '$(srcdir)/'`repo/library/memory_buffer_alloc.c

repo/library/libmbedcrypto_a-memory_buffer_alloc.obj: repo/library/memory_buffer_alloc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-memory_buffer_alloc.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-memory_buffer_alloc.Tpo -c -o repo/library/libmbedcrypto_a-memory_buffer_alloc.obj `if test -f 'repo/library/memory_buffer_alloc.c'; then $(CYGPATH_W) 'repo/library/memory_buffer_alloc.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/memory_buffer_alloc.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-memory_buffer_alloc.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-memory_buffer_alloc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/memory_buffer_alloc.c' object='repo/library/libmbedcrypto_a-memory_buffer_alloc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-memory_buffer_alloc.obj `if test -f 'repo/library/memory_buffer_alloc.c'; then $(CYGPATH_W) 'repo/library/memory_buffer_alloc.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/memory_buffer_alloc.c'; fi`

repo/library/libmbedcrypto_a-oid.o: repo/library/oid.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-oid.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-oid.Tpo -c -o repo/library/libmbedcrypto_a-oid.o `test -f 'repo/library/oid.c' || echo '$(srcdir)/'`repo/library/oid.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-oid.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-oid.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/oid.c' object='repo/library/libmbedcrypto_a-oid.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-oid.o `test -f 'repo/library/oid.c' || echo '$(srcdir)/'`repo/library/oid.c

repo/library/libmbedcrypto_a-oid.obj: repo/library/oid.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-oid.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-oid.Tpo -c -o repo/library/libmbedcrypto_a-oid.obj `if test -f 'repo/library/oid.c'; then $(CYGPATH_W) 'repo/library/oid.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/oid.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-oid.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-oid.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/oid.c' object='repo/library/libmbedcrypto_a-oid.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-oid.obj `if test -f 'repo/library/oid.c'; then $(CYGPATH_W) 'repo/library/oid.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/oid.c'; fi`

repo/library/libmbedcrypto_a-pem.o: repo/library/pem.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-pem.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-pem.Tpo -c -o repo/library/libmbedcrypto_a-pem.o `test -f 'repo/library/pem.c' || echo '$(srcdir)/'`repo/library/pem.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-pem.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-pem.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/pem.c' object='repo/library/libmbedcrypto_a-pem.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-pem.o `test -f 'repo/library/pem.c' || echo '$(srcdir)/'`repo/library/pem.c

repo/library/libmbedcrypto_a-pem.obj: repo/library/pem.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-pem.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-pem.Tpo -c -o repo/library/libmbedcrypto_a-pem.obj `if test -f 'repo/library/pem.c'; then $(CYGPATH_W) 'repo/library/pem.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/pem.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-pem.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-pem.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/pem.c' object='repo/library/libmbedcrypto_a-pem.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-pem.obj `if test -f 'repo/library/pem.c'; then $(CYGPATH_W) 'repo/library/pem.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/pem.c'; fi`

repo/library/libmbedcrypto_a-pk.o: repo/library/pk.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-pk.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-pk.Tpo -c -o repo/library/libmbedcrypto_a-pk.o `test -f 'repo/library/pk.c' || echo '$(srcdir)/'`repo/library/pk.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-pk.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-pk.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/pk.c' object='repo/library/libmbedcrypto_a-pk.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-pk.o `test -f 'repo/library/pk.c' || echo '$(srcdir)/'`repo/library/pk.c

repo/library/libmbedcrypto_a-pk.obj: repo/library/pk.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-pk.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-pk.Tpo -c -o repo/library/libmbedcrypto_a-pk.obj `if test -f 'repo/library/pk.c'; then $(CYGPATH_W) 'repo/library/pk.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/pk.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-pk.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-pk.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/pk.c' object='repo/library/libmbedcrypto_a-pk.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-pk.obj `if test -f 'repo/library/pk.c'; then $(CYGPATH_W) 'repo/library/pk.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/pk.c'; fi`

repo/library/libmbedcrypto_a-pk_wrap.o: repo/library/pk_wrap.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-pk_wrap.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-pk_wrap.Tpo -c -o repo/library/libmbedcrypto_a-pk_wrap.o `test -f 'repo/library/pk_wrap.c' || echo '$(srcdir)/'`repo/library/pk_wrap.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-pk_wrap.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-pk_wrap.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/pk_wrap.c' object='repo/library/libmbedcrypto_a-pk_wrap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-pk_wrap.o `test -f 'repo/library/pk_wrap.c' || echo '$(srcdir)/'`repo/library/pk_wrap.c

repo/library/libmbedcrypto_a-pk_wrap.obj: repo/library/pk_wrap.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-pk_wrap.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-pk_wrap.Tpo -c -o repo/library/libmbedcrypto_a-pk_wrap.obj `if test -f 'repo/library/pk_wrap.c'; then $(CYGPATH_W) 'repo/library/pk_wrap.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/pk_wrap.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-pk_wrap.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-pk_wrap.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/pk_wrap.c' object='repo/library/libmbedcrypto_a-pk_wrap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-pk_wrap.obj `if test -f 'repo/library/pk_wrap.c'; then $(CYGPATH_W) 'repo/library/pk_wrap.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/pk_wrap.c'; fi`

repo/library/libmbedcrypto_a-pkparse.o: repo/library/pkparse.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-pkparse.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-pkparse.Tpo -c -o repo/library/libmbedcrypto_a-pkparse.o `test -f 'repo/library/pkparse.c' || echo '$(srcdir)/'`repo/library/pkparse.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-pkparse.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-pkparse.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/pkparse.c' object='repo/library/libmbedcrypto_a-pkparse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-pkparse.o `test -f 'repo/library/pkparse.c' || echo '$(srcdir)/'`repo/library/pkparse.c

repo/library/libmbedcrypto_a-pkparse.obj: repo/library/pkparse.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-pkparse.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-pkparse.Tpo -c -o repo/library/libmbedcrypto_a-pkparse.obj `if test -f 'repo/library/pkparse.c'; then $(CYGPATH_W) 'repo/library/pkparse.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/pkparse.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-pkparse.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-pkparse.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/pkparse.c' object='repo/library/libmbedcrypto_a-pkparse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-pkparse.obj `if test -f 'repo/library/pkparse.c'; then $(CYGPATH_W) 'repo/library/pkparse.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/pkparse.c'; fi`

repo/library/libmbedcrypto_a-platform.o: repo/library/platform.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-platform.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-platform.Tpo -c -o repo/library/libmbedcrypto_a-platform.o `test -f 'repo/library/platform.c' || echo '$(srcdir)/'`repo/library/platform.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-platform.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-platform.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/platform.c' object='repo/library/libmbedcrypto_a-platform.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-platform.o `test -f 'repo/library/platform.c' || echo '$(srcdir)/'`repo/library/platform.c

repo/library/libmbedcrypto_a-platform.obj: repo/library/platform.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-platform.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-platform.Tpo -c -o repo/library/libmbedcrypto_a-platform.obj `if test -f 'repo/library/platform.c'; then $(CYGPATH_W) 'repo/library/platform.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/platform.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-platform.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-platform.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/platform.c' object='repo/library/libmbedcrypto_a-platform.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-platform.obj `if test -f 'repo/library/platform.c'; then $(CYGPATH_W) 'repo/library/platform.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/platform.c'; fi`

repo/library/libmbedcrypto_a-platform_util.o: repo/library/platform_util.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-platform_util.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-platform_util.Tpo -c -o repo/library/libmbedcrypto_a-platform_util.o `test -f 'repo/library/platform_util.c' || echo '$(srcdir)/'`repo/library/platform_util.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-platform_util.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-platform_util.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/platform_util.c' object='repo/library/libmbedcrypto_a-platform_util.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-platform_util.o `test -f 'repo/library/platform_util.c' || echo '$(srcdir)/'`repo/library/platform_util.c

repo/library/libmbedcrypto_a-platform_util.obj: repo/library/platform_util.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-platform_util.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-platform_util.Tpo -c -o repo/library/libmbedcrypto_a-platform_util.obj `if test -f 'repo/library/platform_util.c'; then $(CYGPATH_W) 'repo/library/platform_util.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/platform_util.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-platform_util.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-platform_util.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/platform_util.c' object='repo/library/libmbedcrypto_a-platform_util.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-platform_util.obj `if test -f 'repo/library/platform_util.c'; then $(CYGPATH_W) 'repo/library/platform_util.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/platform_util.c'; fi`

repo/library/libmbedcrypto_a-sha256.o: repo/library/sha256.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-sha256.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-sha256.Tpo -c -o repo/library/libmbedcrypto_a-sha256.o `test -f 'repo/library/sha256.c' || echo '$(srcdir)/'`repo/library/sha256.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-sha256.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-sha256.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/sha256.c' object='repo/library/libmbedcrypto_a-sha256.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-sha256.o `test -f 'repo/library/sha256.c' || echo '$(srcdir)/'`repo/library/sha256.c

repo/library/libmbedcrypto_a-sha256.obj: repo/library/sha256.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-sha256.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-sha256.Tpo -c -o repo/library/libmbedcrypto_a-sha256.obj `if test -f 'repo/library/sha256.c'; then $(CYGPATH_W) 'repo/library/sha256.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/sha256.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-sha256.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-sha256.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/sha256.c' object='repo/library/libmbedcrypto_a-sha256.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-sha256.obj `if test -f 'repo/library/sha256.c'; then $(CYGPATH_W) 'repo/library/sha256.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/sha256.c'; fi`

repo/library/libmbedcrypto_a-ssl_cookie.o: repo/library/ssl_cookie.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ssl_cookie.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cookie.Tpo -c -o repo/library/libmbedcrypto_a-ssl_cookie.o `test -f 'repo/library/ssl_cookie.c' || echo '$(srcdir)/'`repo/library/ssl_cookie.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cookie.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cookie.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ssl_cookie.c' object='repo/library/libmbedcrypto_a-ssl_cookie.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ssl_cookie.o `test -f 'repo/library/ssl_cookie.c' || echo '$(srcdir)/'`repo/library/ssl_cookie.c

repo/library/libmbedcrypto_a-ssl_cookie.obj: repo/library/ssl_cookie.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ssl_cookie.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cookie.Tpo -c -o repo/library/libmbedcrypto_a-ssl_cookie.obj `if test -f 'repo/library/ssl_cookie.c'; then $(CYGPATH_W) 'repo/library/ssl_cookie.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ssl_cookie.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cookie.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cookie.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ssl_cookie.c' object='repo/library/libmbedcrypto_a-ssl_cookie.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ssl_cookie.obj `if test -f 'repo/library/ssl_cookie.c'; then $(CYGPATH_W) 'repo/library/ssl_cookie.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ssl_cookie.c'; fi`

repo/library/libmbedcrypto_a-ssl_ciphersuites.o: repo/library/ssl_ciphersuites.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ssl_ciphersuites.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ciphersuites.Tpo -c -o repo/library/libmbedcrypto_a-ssl_ciphersuites.o `test -f 'repo/library/ssl_ciphersuites.c' || echo '$(srcdir)/'`repo/library/ssl_ciphersuites.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ciphersuites.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ciphersuites.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ssl_ciphersuites.c' object='repo/library/libmbedcrypto_a-ssl_ciphersuites.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ssl_ciphersuites.o `test -f 'repo/library/ssl_ciphersuites.c' || echo '$(srcdir)/'`repo/library/ssl_ciphersuites.c

repo/library/libmbedcrypto_a-ssl_ciphersuites.obj: repo/library/ssl_ciphersuites.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ssl_ciphersuites.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ciphersuites.Tpo -c -o repo/library/libmbedcrypto_a-ssl_ciphersuites.obj `if test -f 'repo/library/ssl_ciphersuites.c'; then $(CYGPATH_W) 'repo/library/ssl_ciphersuites.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ssl_ciphersuites.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ciphersuites.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ciphersuites.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ssl_ciphersuites.c' object='repo/library/libmbedcrypto_a-ssl_ciphersuites.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ssl_ciphersuites.obj `if test -f 'repo/library/ssl_ciphersuites.c'; then $(CYGPATH_W) 'repo/library/ssl_ciphersuites.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ssl_ciphersuites.c'; fi`

repo/library/libmbedcrypto_a-ssl_cli.o: repo/library/ssl_cli.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ssl_cli.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cli.Tpo -c -o repo/library/libmbedcrypto_a-ssl_cli.o `test -f 'repo/library/ssl_cli.c' || echo '$(srcdir)/'`repo/library/ssl_cli.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cli.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cli.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ssl_cli.c' object='repo/library/libmbedcrypto_a-ssl_cli.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ssl_cli.o `test -f 'repo/library/ssl_cli.c' || echo '$(srcdir)/'`repo/library/ssl_cli.c

repo/library/libmbedcrypto_a-ssl_cli.obj: repo/library/ssl_cli.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ssl_cli.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cli.Tpo -c -o repo/library/libmbedcrypto_a-ssl_cli.obj `if test -f 'repo/library/ssl_cli.c'; then $(CYGPATH_W) 'repo/library/ssl_cli.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ssl_cli.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cli.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cli.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ssl_cli.c' object='repo/library/libmbedcrypto_a-ssl_cli.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ssl_cli.obj `if test -f 'repo/library/ssl_cli.c'; then $(CYGPATH_W) 'repo/library/ssl_cli.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ssl_cli.c'; fi`

repo/library/libmbedcrypto_a-ssl_srv.o: repo/library/ssl_srv.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ssl_srv.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_srv.Tpo -c -o repo/library/libmbedcrypto_a-ssl_srv.o `test -f 'repo/library/ssl_srv.c' || echo '$(srcdir)/'`repo/library/ssl_srv.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_srv.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_srv.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ssl_srv.c' object='repo/library/libmbedcrypto_a-ssl_srv.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ssl_srv.o `test -f 'repo/library/ssl_srv.c' || echo '$(srcdir)/'`repo/library/ssl_srv.c

repo/library/libmbedcrypto_a-ssl_srv.obj: repo/library/ssl_srv.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ssl_srv.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_srv.Tpo -c -o repo/library/libmbedcrypto_a-ssl_srv.obj `if test -f 'repo/library/ssl_srv.c'; then $(CYGPATH_W) 'repo/library/ssl_srv.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ssl_srv.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_srv.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_srv.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ssl_srv.c' object='repo/library/libmbedcrypto_a-ssl_srv.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ssl_srv.obj `if test -f 'repo/library/ssl_srv.c'; then $(CYGPATH_W) 'repo/library/ssl_srv.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ssl_srv.c'; fi`

repo/library/libmbedcrypto_a-ssl_ticket.o: repo/library/ssl_ticket.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ssl_ticket.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ticket.Tpo -c -o repo/library/libmbedcrypto_a-ssl_ticket.o `test -f 'repo/library/ssl_ticket.c' || echo '$(srcdir)/'`repo/library/ssl_ticket.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ticket.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ticket.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ssl_ticket.c' object='repo/library/libmbedcrypto_a-ssl_ticket.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ssl_ticket.o `test -f 'repo/library/ssl_ticket.c' || echo '$(srcdir)/'`repo/library/ssl_ticket.c

repo/library/libmbedcrypto_a-ssl_ticket.obj: repo/library/ssl_ticket.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ssl_ticket.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ticket.Tpo -c -o repo/library/libmbedcrypto_a-ssl_ticket.obj `if test -f 'repo/library/ssl_ticket.c'; then $(CYGPATH_W) 'repo/library/ssl_ticket.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ssl_ticket.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ticket.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ticket.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ssl_ticket.c' object='repo/library/libmbedcrypto_a-ssl_ticket.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ssl_ticket.obj `if test -f 'repo/library/ssl_ticket.c'; then $(CYGPATH_W) 'repo/library/ssl_ticket.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ssl_ticket.c'; fi`

repo/library/libmbedcrypto_a-ssl_tls.o: repo/library/ssl_tls.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ssl_tls.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_tls.Tpo -c -o repo/library/libmbedcrypto_a-ssl_tls.o `test -f 'repo/library/ssl_tls.c' || echo '$(srcdir)/'`repo/library/ssl_tls.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_tls.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_tls.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ssl_tls.c' object='repo/library/libmbedcrypto_a-ssl_tls.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ssl_tls.o `test -f 'repo/library/ssl_tls.c' || echo '$(srcdir)/'`repo/library/ssl_tls.c

repo/library/libmbedcrypto_a-ssl_tls.obj: repo/library/ssl_tls.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ssl_tls.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_tls.Tpo -c -o repo/library/libmbedcrypto_a-ssl_tls.obj `if test -f 'repo/library/ssl_tls.c'; then $(CYGPATH_W) 'repo/library/ssl_tls.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ssl_tls.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_tls.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_tls.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ssl_tls.c' object='repo/library/libmbedcrypto_a-ssl_tls.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ssl_tls.obj `if test -f 'repo/library/ssl_tls.c'; then $(CYGPATH_W) 'repo/library/ssl_tls.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ssl_tls.c'; fi`

repo/library/libmbedcrypto_a-x509.o: repo/library/x509.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-x509.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-x509.Tpo -c -o repo/library/libmbedcrypto_a-x509.o `test -f 'repo/library/x509.c' || echo '$(srcdir)/'`repo/library/x509.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-x509.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-x509.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/x509.c' object='repo/library/libmbedcrypto_a-x509.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-x509.o `test -f 'repo/library/x509.c' || echo '$(srcdir)/'`repo/library/x509.c

repo/library/libmbedcrypto_a-x509.obj: repo/library/x509.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-x509.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-x509.Tpo -c -o repo/library/libmbedcrypto_a-x509.obj `if test -f 'repo/library/x509.c'; then $(CYGPATH_W) 'repo/library/x509.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/x509.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-x509.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-x509.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/x509.c' object='repo/library/libmbedcrypto_a-x509.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-x509.obj `if test -f 'repo/library/x509.c'; then $(CYGPATH_W) 'repo/library/x509.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/x509.c'; fi`

repo/library/libmbedcrypto_a-x509_crt.o: repo/library/x509_crt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-x509_crt.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-x509_crt.Tpo -c -o repo/library/libmbedcrypto_a-x509_crt.o `test -f 'repo/library/x509_crt.c' || echo '$(srcdir)/'`repo/library/x509_crt.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-x509_crt.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-x509_crt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/x509_crt.c' object='repo/library/libmbedcrypto_a-x509_crt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-x509_crt.o `test -f 'repo/library/x509_crt.c' || echo '$(srcdir)/'`repo/library/x509_crt.c

repo/library/libmbedcrypto_a-x509_crt.obj: repo/library/x509_crt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-x509_crt.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-x509_crt.Tpo -c -o repo/library/libmbedcrypto_a-x509_crt.obj `if test -f 'repo/library/x509_crt.c'; then $(CYGPATH_W) 'repo/library/x509_crt.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/x509_crt.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-x509_crt.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-x509_crt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/x509_crt.c' object='repo/library/libmbedcrypto_a-x509_crt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-x509_crt.obj `if test -f 'repo/library/x509_crt.c'; then $(CYGPATH_W) 'repo/library/x509_crt.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/x509_crt.c'; fi`

repo/library/libmbedcrypto_a-ecp.o: repo/library/ecp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ecp.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ecp.Tpo -c -o repo/library/libmbedcrypto_a-ecp.o `test -f 'repo/library/ecp.c' || echo '$(srcdir)/'`repo/library/ecp.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ecp.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ecp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ecp.c' object='repo/library/libmbedcrypto_a-ecp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ecp.o `test -f 'repo/library/ecp.c' || echo '$(srcdir)/'`repo/library/ecp.c

repo/library/libmbedcrypto_a-ecp.obj: repo/library/ecp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ecp.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ecp.Tpo -c -o repo/library/libmbedcrypto_a-ecp.obj `if test -f 'repo/library/ecp.c'; then $(CYGPATH_W) 'repo/library/ecp.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ecp.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ecp.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ecp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ecp.c' object='repo/library/libmbedcrypto_a-ecp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ecp.obj `if test -f 'repo/library/ecp.c'; then $(CYGPATH_W) 'repo/library/ecp.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ecp.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f repo/library/$(DEPDIR)/$(am__dirstamp)
	-rm -f repo/library/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf repo/library/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf repo/library/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES clean-libtool cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-libLIBRARIES

.PRECIOUS: Makefile


include $(abs_top_nlbuild_autotools_dir)/automake/pre.am

# Do not enable -Wconversion for mbedtls
override CFLAGS                              := $(filter-out -Wconversion,$(CFLAGS))
override CXXFLAGS                            := $(filter-out -Wconversion,$(CXXFLAGS))

# Do not enable -pedantic-errors for mbedtls
override CFLAGS                              := $(filter-out -pedantic-errors,$(CFLAGS))
override CXXFLAGS                            := $(filter-out -pedantic-errors,$(CXXFLAGS))

include $(abs_top_nlbuild_autotools_dir)/automake/post.am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
